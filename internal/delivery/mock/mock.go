// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go

// Package mock_delivery is a generated GoMock package.
package mock_delivery

import (
	models "ozonTech/muhtarov/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockURLShorty is a mock of URLShorty interface.
type MockURLShorty struct {
	ctrl     *gomock.Controller
	recorder *MockURLShortyMockRecorder
}

// MockURLShortyMockRecorder is the mock recorder for MockURLShorty.
type MockURLShortyMockRecorder struct {
	mock *MockURLShorty
}

// NewMockURLShorty creates a new mock instance.
func NewMockURLShorty(ctrl *gomock.Controller) *MockURLShorty {
	mock := &MockURLShorty{ctrl: ctrl}
	mock.recorder = &MockURLShortyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLShorty) EXPECT() *MockURLShortyMockRecorder {
	return m.recorder
}

// AddUrl mocks base method.
func (m *MockURLShorty) AddUrl(mail string) (models.UrlStruct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUrl", mail)
	ret0, _ := ret[0].(models.UrlStruct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddUrl indicates an expected call of AddUrl.
func (mr *MockURLShortyMockRecorder) AddUrl(mail interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUrl", reflect.TypeOf((*MockURLShorty)(nil).AddUrl), mail)
}

// GetFullUrl mocks base method.
func (m *MockURLShorty) GetFullUrl(keyword string) (models.UrlStruct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullUrl", keyword)
	ret0, _ := ret[0].(models.UrlStruct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullUrl indicates an expected call of GetFullUrl.
func (mr *MockURLShortyMockRecorder) GetFullUrl(keyword interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullUrl", reflect.TypeOf((*MockURLShorty)(nil).GetFullUrl), keyword)
}
