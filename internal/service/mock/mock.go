// Code generated by MockGen. DO NOT EDIT.
// Source: short_url.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	models "ozonTech/muhtarov/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockURLShortyRepository is a mock of URLShortyRepository interface.
type MockURLShortyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockURLShortyRepositoryMockRecorder
}

// MockURLShortyRepositoryMockRecorder is the mock recorder for MockURLShortyRepository.
type MockURLShortyRepositoryMockRecorder struct {
	mock *MockURLShortyRepository
}

// NewMockURLShortyRepository creates a new mock instance.
func NewMockURLShortyRepository(ctrl *gomock.Controller) *MockURLShortyRepository {
	mock := &MockURLShortyRepository{ctrl: ctrl}
	mock.recorder = &MockURLShortyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLShortyRepository) EXPECT() *MockURLShortyRepositoryMockRecorder {
	return m.recorder
}

// AddUrl mocks base method.
func (m *MockURLShortyRepository) AddUrl(urlStruct models.UrlStruct) (models.UrlStruct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUrl", urlStruct)
	ret0, _ := ret[0].(models.UrlStruct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddUrl indicates an expected call of AddUrl.
func (mr *MockURLShortyRepositoryMockRecorder) AddUrl(urlStruct interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUrl", reflect.TypeOf((*MockURLShortyRepository)(nil).AddUrl), urlStruct)
}

// GetFullUrlByShort mocks base method.
func (m *MockURLShortyRepository) GetFullUrlByShort(shortUrl string) (models.UrlStruct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullUrlByShort", shortUrl)
	ret0, _ := ret[0].(models.UrlStruct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullUrlByShort indicates an expected call of GetFullUrlByShort.
func (mr *MockURLShortyRepositoryMockRecorder) GetFullUrlByShort(shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullUrlByShort", reflect.TypeOf((*MockURLShortyRepository)(nil).GetFullUrlByShort), shortUrl)
}
